{"version":3,"sources":["components/tutorialsList/tutorialsList.component.jsx","components/dashboard.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Text","Typography","columns","title","dataIndex","key","render","value","name","sorter","a","b","foss","localeCompare","sortDirections","tutorial","tutorial_detail","language","filters","text","onFilter","record","submission_status","includes","type","style","color","href","TutorialsListComponent","props","state","tutorialsList","loading","axios","get","process","then","res","setState","data","this","dataSource","React","Component","Title","DashboardComponent","closeModal","isModalVisible","showComment","isCommentVisible","closeCommentModal","closeRejectionModal","isRejectionVisible","showRejectionModal","openNotificationWithIcon","message","notification","description","sendVerdict","formData","status","post","id","history","push","catch","acceptTutorial","FormData","append","rejectTutorial","comment","oldChunk","newChunk","fetchingChunk","chunks","tutorial_name","total_count","processed_video","showModal","chunk_no","length","width","backgroundColor","revisions","fontWeight","children","audio_chunk","src","controls","subtitle","icon","EyeOutlined","onClick","disabled","qs","parse","location","search","ignoreQueryPrefix","video_data","total_chunks","status_text","level","LeftOutlined","size","align","display","justifyContent","alignItems","span","okText","cancelText","onConfirm","danger","MessageOutlined","fluid","preload","height","playsInline","Input","active","className","visible","onOk","onCancel","gutter","Paragraph","okButtonProps","TextArea","allowClear","autoSizer","rows","onChange","e","target","withRouter","App","cookies","csrftoken","defaults","headers","common","exact","path","component","withCookies","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.bfa663b7.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {Button, Table, Typography} from \"antd\";\n\nconst {Text} = Typography\n\nconst columns = [\n    {\n        title: 'FOSS',\n        dataIndex: 'foss',\n        key: 'key',\n        render: value => value.name,\n        sorter: (a, b) => a.foss.name.localeCompare(b.foss.name),\n        sortDirections: ['descend', 'ascend']\n    },\n    {\n        title: 'Tutorial Name',\n        dataIndex: 'tutorial_detail',\n        key: 'key',\n        render: value => value.tutorial,\n        sorter: (a, b) => a.tutorial_detail.tutorial.localeCompare(b.tutorial_detail.tutorial),\n        sortDirections: ['descend', 'ascend']\n    },\n    {\n        title: 'Language',\n        dataIndex: 'language',\n        key: 'key',\n        render: value => value.name,\n        sorter: (a, b) => a.language.name.localeCompare(b.language.name),\n        sortDirections: ['descend', 'ascend']\n    }\n    , {\n        title: 'Status',\n        dataIndex: 'submission_status',\n        key: 'key',\n        filters: [\n            {text: 'Submitted for Review', value: 'submitted'},\n            {text: 'Accepted', value: 'accepted'},\n            {text: 'Rejected', value: 'rejected'},\n\n        ],\n        // filteredValue: filteredInfo.submission_status || null,\n        onFilter: (value, record) => record.submission_status.includes(value),\n        render: value => {\n            if (value === 'submitted')\n                return <Text type=\"warning\">Submitted for Review</Text>\n            if (value === 'accepted')\n                return <Text style={{color: 'green'}}>Accepted</Text>\n            if (value === 'rejected')\n                return <Text type=\"danger\">Rejected</Text>\n        }\n    },\n    {\n        title: 'Review',\n        dataIndex: 'key',\n        key: 'key',\n        render: value => <Button href={`#/dashboard?id=${value}`}>Review</Button>\n    },\n];\n\nclass TutorialsListComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tutorialsList: null,\n            loading: true\n        }\n    }\n\n    componentDidMount() {\n        axios.get(`${process.env.REACT_APP_API_URL}/review`)\n            .then((res) => {\n                this.setState({tutorialsList: res.data, loading: false})\n            })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Table\n                    loading={this.state.loading}\n                    dataSource={this.state.tutorialsList}\n                    columns={columns}/>\n            </div>\n\n        )\n    }\n}\n\nexport default TutorialsListComponent\n","import React from \"react\";\nimport qs from 'qs'\nimport axios from \"axios\";\nimport ReactAudioPlayer from 'react-audio-player';\nimport {Button, Col, Input, Modal, notification, Popconfirm, Row, Skeleton, Space, Table, Typography} from \"antd\";\nimport {EyeOutlined, LeftOutlined, MessageOutlined} from '@ant-design/icons';\nimport {Player} from 'video-react';\nimport \"../../node_modules/video-react/dist/video-react.css\";\nimport {withRouter} from \"react-router-dom\"; // import css\nconst {Title} = Typography\n\nclass DashboardComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            id: null,\n            isModalVisible: false,\n            oldChunk: null,\n            newChunk: null,\n            fetchingChunk: true,\n            chunks: [],\n            status: '',\n            tutorial_name: '',\n            foss: '',\n            total_count: '',\n            processed_video: '',\n            isCommentVisible: false,\n            isRejectionVisible: false,\n            comment: '',\n            submission_status: ''\n        }\n\n        this.showModal = (chunk_no) => {\n            this.setState({isModalVisible: true, fetchingChunk: true})\n            axios.get(`${process.env.REACT_APP_API_URL}/review/${this.state.id}/${chunk_no}`)\n                .then((res) => {\n                    this.setState({\n                        oldChunk: res.data.history[res.data.history.length - 1],\n                        newChunk: res.data.history[0]\n                    })\n                })\n                .then(() => this.setState({fetchingChunk: false}))\n        }\n\n        this.columns = [\n            {\n                title: 'Chunk No.',\n                dataIndex: 'chunk_no',\n                key: 'chunk_no',\n                width: '5%',\n                render(text, record) {\n                    return {\n                        props: {\n                            style: {\n                                backgroundColor: record.revisions > 1 ? '#bae7ff' : 'white',\n                                fontWeight: record.revisions > 1 ? 'bold' : 'normal'\n                            }\n\n                        },\n                        children: <div>{text + 1}</div>,\n                    };\n                }\n\n\n            },\n            {\n                title: 'Audio',\n                dataIndex: 'audio_chunk',\n                key: 'audio_chunk',\n                width: '10%',\n                render: (audio_chunk, record) => {\n                    return {\n                        props: {\n                            style: {\n                                backgroundColor: record.revisions > 1 ? '#bae7ff' : 'white',\n                                fontWeight: record.revisions > 1 ? 'bold' : 'normal'\n                            }\n\n                        }, children:\n                            <ReactAudioPlayer\n                                src={audio_chunk}\n                                controls\n                            />\n                    }\n                },\n            },\n            {\n                title: 'Start Time',\n                dataIndex: 'start_time',\n                key: 'start_time',\n                width: '10%',\n                render(text, record) {\n                    return {\n                        props: {\n                            style: {\n                                backgroundColor: record.revisions > 1 ? '#bae7ff' : 'white',\n                                fontWeight: record.revisions > 1 ? 'bold' : 'normal'\n                            }\n\n                        },\n                        children: <div>{text}</div>,\n                    };\n                }\n\n\n            },\n            {\n                title: 'End Time',\n                dataIndex: 'end_time',\n                key: 'end_time',\n                width: '10%',\n                render(text, record) {\n                    return {\n                        props: {\n                            style: {\n                                backgroundColor: record.revisions > 1 ? '#bae7ff' : 'white',\n                                fontWeight: record.revisions > 1 ? 'bold' : 'normal'\n                            }\n\n                        },\n                        children: <div>{text}</div>,\n                    };\n                },\n\n            },\n            {\n                title: 'Subtitle',\n                dataIndex: 'subtitle',\n                key: 'subtitle',\n                width: '55%',\n                render(text, record) {\n                    return {\n                        props: {\n                            style: {\n                                backgroundColor: record.revisions > 1 ? '#bae7ff' : 'white',\n                                fontWeight: record.revisions > 1 ? 'bold' : 'normal'\n                            },\n                        },\n                        children: <div>{text}</div>,\n                    };\n                },\n                sorter: (a, b) => a.subtitle.localeCompare(b.subtitle),\n                sortDirections: ['descend', 'ascend']\n            },\n            {\n                title: 'Changes',\n                dataIndex: 'revisions',\n                key: 'revisions',\n                width: '10%',\n                render: (value, record) => {\n                    return {\n                        props: {\n                            style: {\n                                backgroundColor: record.revisions > 1 ? '#bae7ff' : 'white',\n                                fontWeight: record.revisions > 1 ? 'bold' : 'normal'\n                            },\n                        },\n                        children:\n                            <div>\n                                <Button\n                                    icon={<EyeOutlined/>}\n                                    onClick={() => this.showModal(record.chunk_no)}\n                                    disabled={record.revisions <= 1}>\n                                    View Changes\n                                </Button>\n                            </div>\n\n                    }\n                }\n\n\n            }\n        ];\n\n    }\n\n\n    componentWillMount() {\n        let id = qs.parse(this.props.location.search, {ignoreQueryPrefix: true}).id\n        this.setState({id: id})\n    }\n\n\n    componentDidMount() {\n        axios.get(`${process.env.REACT_APP_API_URL}/review/${this.state.id}`)\n            .then((res) => {\n                this.setState({\n                    chunks: res.data.chunks,\n                    total_count: res.data.video_data.total_chunks,\n                    tutorial_name: res.data.video_data.tutorial_name,\n                    language: res.data.video_data.language,\n                    foss: res.data.video_data.foss,\n                    status: res.data.video_data.status,\n                    submission_status: res.data.video_data.submission_status,\n                    loading: false,\n                    processed_video: res.data.video_data.processed_video,\n                    comment: res.data.video_data.comment\n\n                });\n            })\n    }\n\n    closeModal = () => {\n        this.setState({\n            isModalVisible: false\n        })\n\n    }\n\n    showComment = () => {\n        this.setState({\n            isCommentVisible: true\n        })\n    }\n\n    closeCommentModal = () => {\n        this.setState({\n            isCommentVisible: false\n        })\n    }\n\n    closeRejectionModal = () => {\n        this.setState({\n            isRejectionVisible: false\n        })\n    }\n\n    showRejectionModal = () => {\n        this.setState({\n            isRejectionVisible: true\n        })\n    }\n\n\n    openNotificationWithIcon = (title, message, type) => {\n        notification[type]({\n            message: title,\n            description: message\n        });\n    };\n\n    sendVerdict = (formData, status) => {\n        axios.post(`${process.env.REACT_APP_API_URL}/review/${this.state.id}/verdict`, formData)\n            .then(() => {\n                if (status === 'accepted')\n                    this.openNotificationWithIcon('Accepted', 'Tutorial Accepted Successfully', 'success')\n                else\n                    this.openNotificationWithIcon('Rejected', 'Tutorial Rejected Successfully', 'warning')\n            })\n            .then(() => {\n                this.props.history.push('/')\n            })\n            .catch(() => {\n                this.openNotificationWithIcon('Error', 'Some Error Occurred', 'error')\n            })\n    }\n\n    acceptTutorial = () => {\n        const formData = new FormData();\n        formData.append('verdict', 'accepted')\n        this.sendVerdict(formData, 'accepted')\n\n    }\n\n    rejectTutorial = () => {\n        const formData = new FormData();\n        formData.append('verdict', 'rejected')\n        formData.append('comment', this.state.comment)\n        this.sendVerdict(formData, 'rejected')\n    }\n\n\n    render() {\n        let status_text\n        if (this.state.submission_status === 'submitted')\n            status_text = <Title level={4} type=\"warning\">Submitted for Review</Title>\n        else if (this.state.submission_status === 'accepted')\n            status_text = <Title level={4} style={{color: 'green'}}>Accepted</Title>\n        else if (this.state.submission_status === 'rejected')\n            status_text = <Title level={4} type=\"danger\">Rejected</Title>\n\n\n        return (\n            <div>\n                <Button type=\"round\"\n                        icon={<LeftOutlined/>}\n                        onClick={() => this.props.history.push('/')}\n                        size='small'\n                >\n                    Back\n                </Button>\n\n                <Row align=\"middle\">\n                    <Col style={{display: 'inline-flex', justifyContent: 'center', alignItems: 'center'}}\n                         span={8}>\n                        <Typography>\n                            <Title level={3}>{this.state.tutorial_name}</Title>\n                            <Title level={4}>{this.state.foss}</Title>\n                        </Typography>\n\n                    </Col>\n\n                    <Col style={{display: 'inline-flex', justifyContent: 'center', alignItems: 'center'}}\n                         span={8}>\n                        <Typography>\n                            {status_text}\n                            <Title>\n                                <Space size='large'>\n                                    <Popconfirm\n                                        title=\"Are you sure？\"\n                                        okText=\"Yes\"\n                                        cancelText=\"No\"\n                                        disabled={this.state.status !== 'done' || this.state.submission_status !== 'submitted'}\n                                        onConfirm={this.acceptTutorial}>\n                                        <Button\n                                            disabled={this.state.status !== 'done' || this.state.submission_status !== 'submitted'}\n                                            size='large'\n                                            type=\"primary\"\n                                        >Accept</Button>\n                                    </Popconfirm>\n                                    <Button\n                                        size='large'\n                                        type=\"primary\"\n                                        danger\n                                        onClick={this.showRejectionModal}\n                                        disabled={this.state.status !== 'done' || this.state.submission_status !== 'submitted'}\n                                    >Reject</Button>\n                                    <Button\n                                        size='large'\n                                        icon={<MessageOutlined/>}\n                                        onClick={this.showComment}\n                                        disabled={this.state.status !== 'done' || this.state.submission_status !== 'submitted'}\n\n                                    >\n                                        View Comment\n\n                                    </Button>\n\n                                </Space>\n\n                            </Title>\n                        </Typography>\n                    </Col>\n\n                    <Col style={{display: 'inline-flex', justifyContent: 'center', alignItems: 'center'}}\n                         span={8}>\n\n                        {\n                            this.state.status === 'done' ?\n                                <Player\n                                    fluid={false}\n                                    preload='auto'\n                                    height={200}\n                                    playsInline\n                                    src={this.state.processed_video}\n                                />\n\n\n                                // <VideoPlayer\n                                //     autoplay={false}\n                                //     controls={true}\n                                //     preload=\"auto\"\n                                //     // width={200}\n                                //     sources={[{\n                                //         src: this.state.processed_video,\n                                //         type: 'video/mp4'\n                                //     }]}\n                                // />\n                                :\n                                <Skeleton.Input style={{height: '200px'}} active/>\n                        }\n\n\n                    </Col>\n\n                </Row>\n                <Row>\n\n                    <Table\n                        loading={this.state.loading}\n                        className='data-table'\n                        dataSource={this.state.chunks}\n                        columns={this.columns}/>\n                </Row>\n                <Modal\n                    loading={true}\n                    width={'60vw'}\n                    title=\"View Changes\"\n                    visible={this.state.isModalVisible}\n                    onOk={this.closeModal}\n                    onCancel={this.closeModal}\n                >\n                    {!this.state.fetchingChunk ?\n                        <Row gutter={32}>\n                            <Col span={12}>\n                                <Typography.Title level={4}>Old Version</Typography.Title>\n                                <br/>\n                                <ReactAudioPlayer\n                                    src={`${process.env.REACT_APP_MEDIA_URL}/${this.state.oldChunk.audio_chunk}`}\n                                    controls\n\n                                />\n                                <br/> <br/>\n\n                                <Typography.Paragraph>\n                                    {this.state.oldChunk.subtitle}\n                                </Typography.Paragraph>\n                            </Col>\n                            <Col span={12}>\n                                <Typography.Title level={4}>New Version</Typography.Title>\n                                <br/>\n\n                                <ReactAudioPlayer\n                                    src={`${process.env.REACT_APP_MEDIA_URL}/${this.state.newChunk.audio_chunk}`}\n                                    controls\n\n                                />\n                                <br/> <br/>\n\n                                <Typography.Paragraph>\n                                    {this.state.newChunk.subtitle}\n                                </Typography.Paragraph>\n                            </Col>\n                        </Row> : null}\n                </Modal>\n                <Modal\n                    title=\"Comment from Contributor\"\n                    visible={this.state.isCommentVisible}\n                    onOk={this.closeCommentModal}\n                    onCancel={this.closeCommentModal}\n                >\n                    <Typography.Paragraph>\n                        {this.state.comment}\n                    </Typography.Paragraph>\n                </Modal>\n                <Modal\n                    title=\"Reject\"\n                    visible={this.state.isRejectionVisible}\n                    onOk={this.rejectTutorial}\n                    okButtonProps={{danger: true}}\n                    onCancel={this.closeRejectionModal}\n                    okText='Reject'\n                >\n                    <Typography.Text>Rejection Message</Typography.Text>\n                    <Input.TextArea allowClear\n                                    autoSizer\n                                    rows={4}\n                                    onChange={(e) => {\n                                        this.setState({comment: e.target.value})\n                                    }}\n                    />\n                </Modal>\n            </div>\n        )\n    }\n\n\n}\n\nexport default withRouter(DashboardComponent)\n","import React from 'react';\nimport './App.css';\nimport {Route, Switch} from 'react-router-dom';\nimport TutorialsListComponent from \"./components/tutorialsList/tutorialsList.component\";\nimport DashboardComponent from \"./components/dashboard.component\";\nimport axios from 'axios'\nimport {Cookies, withCookies} from 'react-cookie';\nimport {instanceOf} from 'prop-types';\n\nclass App extends React.Component {\n        static propTypes = {\n        cookies: instanceOf(Cookies).isRequired\n    };\n\n\n    constructor(props) {\n        super(props);\n\n        const {cookies} = props;\n        this.state = {\n            csrftoken: cookies.get('csrftoken')\n        };\n        axios.defaults.headers.common['X-CSRFToken'] = this.state.csrftoken // for all requests\n\n    }\n\n\n      render() {\n        return (\n            <div>\n                <Switch>\n                    <Route exact path='/' component={TutorialsListComponent}/>\n                    <Route path='/dashboard' component={DashboardComponent}/>\n                </Switch>\n            </div>\n\n        );\n    }\n\n\n}\n\nexport default withCookies(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n\n        <App/>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}