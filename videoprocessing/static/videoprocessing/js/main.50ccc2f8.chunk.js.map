{"version":3,"sources":["components/tutorialsList/tutorialsList.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Option","Text","columns","title","dataIndex","key","sorter","a","b","foss","localeCompare","sortDirections","tutorial","language","TutorialsListComponent","state","tutorials","filteredTutorials","tutorialsInTable","searchFilteredTable","isLoading","isTutDisabled","fossDropdownOption","tutorialDropdownOption","searchBox","filterFosses","bind","filterTutorials","renderOptions","searchTable","value","option","console","log","all","this","setState","tuts","filter","item","type","options","Set","optionRender","map","add","Array","from","push","e","target","filteredList","booltut","toLowerCase","includes","boolfoss","boollang","filtered_tuts","fosses","langs","axios","get","process","then","res","data","tut_obj","foss_category","name","tutorial_detail","isEdited","tutorial_id","id","language_id","button","size","icon","EditOutlined","tut","i","length","EyeOutlined","xs","sm","md","lg","xl","span","offset","level","onChange","defaultValue","style","width","disabled","allowClear","placeholder","prefix","SearchOutlined","loading","dataSource","React","Component","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.50ccc2f8.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from 'axios'\nimport {Button, Col, Input, Row, Select, Table, Typography} from 'antd';\nimport {EditOutlined,SearchOutlined,EyeOutlined} from '@ant-design/icons'\n\nconst {Option} = Select;\nconst {Text} = Typography\nconst columns = [\n    {\n        title: 'FOSS',\n        dataIndex: 'foss',\n        key: 'foss',\n        sorter: (a, b) => a.foss.localeCompare(b.foss),\n        sortDirections: ['descend', 'ascend']\n    },\n    {\n        title: 'Tutorial Name',\n        dataIndex: 'tutorial',\n        key: 'tutorial',\n        sorter: (a, b) => a.tutorial.localeCompare(b.tutorial),\n        sortDirections: ['descend', 'ascend']\n    },\n    {\n        title: 'Language',\n        dataIndex: 'language',\n        key: 'language',\n        sorter: (a, b) => a.language.localeCompare(b.language),\n        sortDirections: ['descend', 'ascend']\n    }, {\n        title: 'Edit Video',\n        dataIndex: 'button',\n        key: 'button',\n    },\n];\n\nclass TutorialsListComponent extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            tutorials: [],\n            filteredTutorials: [],\n            tutorialsInTable: [],\n            searchFilteredTable: [],\n            isLoading: true,\n            isTutDisabled: true,\n            fossDropdownOption: 'All',\n            tutorialDropdownOption: 'All',\n            searchBox: ''\n        }\n        this.filterFosses = this.filterFosses.bind(this)\n        this.filterTutorials = this.filterTutorials.bind(this)\n        this.renderOptions = this.renderOptions.bind(this);\n        this.searchTable = this.searchTable.bind(this);\n\n    }\n\n\n    async filterFosses(value, option) {\n        console.log(value)\n        if (value === 'All') {\n            let all = this.state.tutorials\n            console.log(all)\n\n            this.setState({\n                fossDropdownOption: 'All',\n                filteredTutorials: all,\n                isTutDisabled: true,\n                tutorialsInTable: all,\n                tutorialDropdownOption: 'All'\n            })\n        } else {\n            let tuts = this.state.tutorials\n            tuts = await tuts.filter((item) => {\n                return item.foss === value\n            })\n            console.log(tuts)\n            this.setState({\n                fossDropdownOption: value,\n                filteredTutorials: tuts,\n                isTutDisabled: false,\n                tutorialsInTable: tuts\n            })\n        }\n    }\n\n    async filterTutorials(value, option) {\n        if (value === 'All') {\n            let tuts = this.state.filteredTutorials\n            tuts = await tuts.filter((item) => {\n                return item.foss === this.state.fossDropdownOption\n            })\n            this.setState({tutorialsInTable: tuts, tutorialDropdownOption: value})\n\n        } else {\n            let tuts = this.state.filteredTutorials\n            tuts = await tuts.filter((item) => {\n                return item.tutorial === value\n            })\n            console.log(tuts)\n            this.setState({tutorialsInTable: tuts, tutorialDropdownOption: value})\n        }\n    }\n\n\n    renderOptions(type) {\n        let options = new Set()\n        let optionRender = []\n        this.state.tutorials.map((item) => {\n            options.add(type === 'foss' ? item.foss : item.tutorial)\n        })\n        options = Array.from(options)\n        options.map((item) => {\n            optionRender.push(<Option value={item}>{item}</Option>)\n        })\n\n        return optionRender\n\n    }\n\n    async searchTable(e){\n        let value = e.target.value\n        let filteredList = this.state.tutorialsInTable\n        filteredList = await filteredList.filter(item => {\n            let booltut = item.tutorial.toLowerCase().includes(value.toLowerCase())\n            let boolfoss = item.foss.toLowerCase().includes(value.toLowerCase())\n            let boollang = item.language.toLowerCase().includes(value.toLowerCase())\n            return booltut || boollang || boolfoss\n        })\n        this.setState({searchFilteredTable: filteredList,searchBox:value})\n\n    }\n    componentDidMount() {\n        let filtered_tuts = []\n        let fosses = new Set()\n        let tutorials = new Set()\n        let langs = new Set()\n        axios.get(`${process.env.REACT_APP_API_URL}/tutorials`)\n            .then(res => {\n                let data = res.data\n                data.map((tutorial) => {\n                    let tut_obj = {};\n                    tut_obj.foss = tutorial.foss_category.name\n                    tut_obj.tutorial = tutorial.tutorial_detail.tutorial\n                    tut_obj.language = tutorial.language.name\n                    tut_obj.isEdited = false\n                    tut_obj.tutorial_id = tutorial.tutorial_detail.id\n                    tut_obj.language_id = tutorial.language.id\n                    tut_obj.button = <Button size={'large'} icon={<EditOutlined/>}>Edit Video</Button>\n                    filtered_tuts.push(tut_obj)\n                    fosses.add(tut_obj.foss)\n                    tutorials.add(tut_obj.tutorial)\n                    langs.add(tut_obj.language)\n                    return filtered_tuts\n                    // this.setState({tutorials: existing_tut})\n                })\n            }).then(() => {\n            axios.get(`${process.env.REACT_APP_API_URL}/process_tutorials`)\n                .then(res => {\n                    let data = res.data\n                    data.map((tut) => {\n                        console.log(tut)\n                        for (let i = 0; i < filtered_tuts.length; i++) {\n                            if (filtered_tuts[i].tutorial_id === tut.tutorial_detail && filtered_tuts[i].language_id === tut.language) {\n                                filtered_tuts[i].isEdited = true\n                                filtered_tuts[i].button =\n                                    <Button size={'large'} icon={<EyeOutlined />}>View</Button>\n                            }\n                        }\n                    })\n\n                })\n                .then(() => {\n                    this.setState({\n                        tutorials: filtered_tuts,\n                        isLoading: false,\n                        filteredTutorials: filtered_tuts,\n                        tutorialsInTable: filtered_tuts\n                    })\n\n\n                })\n        })\n    }\n\n    render() {\n\n        return (\n            <div>\n\n                <Row xs={2} sm={4} md={6} lg={10} xl={10}>\n                    <Col span={6} offset={1}>\n                        <Text level={4}>\n                            FOSS &nbsp; &nbsp; &nbsp;\n                        </Text>\n                        <Select\n                            value={this.state.fossDropdownOption}\n                            size='large'\n                            onChange={this.filterFosses}\n                            defaultValue=\"All\"\n                            style={{width: 120}}>\n                            <Option value='All'>All</Option>\n                            {\n                                this.renderOptions('foss')\n                            }\n                        </Select>\n                    </Col>\n                    <Col span={6}>\n                        <Text level={3}>\n                           Tutorial  &nbsp; &nbsp; &nbsp;\n                        </Text>\n                        <Select value={this.state.tutorialDropdownOption}\n                                size='large'\n                                disabled={this.state.isTutDisabled}\n                                style={{width: 120}}\n                                onChange={this.filterTutorials}>\n                            <Option value='All'>All</Option>\n                            {\n                                this.renderOptions('tutorials')\n\n                            }\n                        </Select>\n                    </Col>\n                    <Col span={10}>\n                        <Input allowClear size=\"large\" placeholder=\"Search\" prefix={<SearchOutlined/>} onChange={this.searchTable} />\n\n                    </Col>\n                    <Col span={1}/>\n                </Row>\n                <Table loading={this.state.isLoading} dataSource={this.state.searchBox!==''?this.state.searchFilteredTable:this.state.tutorialsInTable} columns={columns}/>\n            </div>\n\n\n        );\n    }\n}\n\nexport default TutorialsListComponent\n","import React from 'react';\nimport './App.css';\nimport TutorialsListComponent from \"./components/tutorialsList/tutorialsList.component\";\n\n\nfunction App() {\n    return (\n        <div className='App'>\n            <TutorialsListComponent/>\n        </div>\n\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n    <App />\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}